@using Ferreteria.Application.Website.Models

@model Ferreteria.Application.Website.Models.ProductModel
<!-- Modal -->

<div class="modal-header">
	<h5 class="modal-title" id="modal-user-create-title">@ViewBag.TitleModal</h5>
</div>
<div class="modal-body" id="modal-user-create-body" style="overflow-y: auto;">
	<form asp-action="CreateOrUpdate" asp-controller="LoadType" data-ajax="true" data-ajax-method="POST" id="formProductcrud">

		@Html.AntiForgeryToken()

		@Html.HiddenFor(model => model.ProductId)

		<div class="form-horizontal">
			<div class="row">
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
					<div class="col-md-12 col-sm-12 col-xs-12">
						@Html.TextBoxFor(model => model.Name, new { @class = "form-control col-md-12 col-xs-12 required", placeholder = "Digite el nombre del producto", @maxlength = 50 })
					</div>
				</div>
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
					<div class="col-md-12 col-sm-12 col-xs-12">
						@Html.TextBoxFor(model => model.ProductCode, new { @class = "form-control col-md-12 col-xs-12 required inputPositiveInput", placeholder = "Digite el código del producto", @maxlength = 50 })
					</div>
				</div>

				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
					<div class="col-md-12 col-sm-12 col-xs-12">
						@Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.ListCategory, htmlAttributes: new { @class = "form-control required select2", @style = "width:100%;" })
					</div>
				</div>
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.LabelFor(model => model.SupplierId, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
					<div class="col-md-12 col-sm-12 col-xs-12">
						@Html.DropDownListFor(model => model.SupplierId, (IEnumerable<SelectListItem>)ViewBag.ListSupplier, htmlAttributes: new { @class = "form-control required select2", @style = "width:100%;" })
					</div>
				</div>
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.LabelFor(model => model.Unit, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
					<div class="col-md-12 col-sm-12 col-xs-12">
						@Html.DropDownListFor(model => model.Unit, (IEnumerable<SelectListItem>)ViewBag.ListUnitType, htmlAttributes: new { @class = "form-control required", @style = "width:100%;" })
					</div>
				</div>
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
					<div class="col-md-12 col-sm-12 col-xs-12">
						@Html.TextBoxFor(model => model.Price, new { @class = "form-control col-md-12 col-xs-12 required inputPositiveInput2d", placeholder = "Digite el precio del producto", @maxlength = 50 })
					</div>
				</div>
				<div class="col-md-6 col-sm-6 col-xs-12">
					@Html.LabelFor(model => model.StockQuantity, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
					<div class="col-md-12 col-sm-12 col-xs-12">
						@Html.TextBoxFor(model => model.StockQuantity, new { @class = "form-control col-md-12 col-xs-12 required inputPositiveInput", placeholder = "Digite la cantidad del producto", @maxlength = 50 })
					</div>
				</div>

				<div class="col-md-12 col-sm-12 col-xs-12">
					@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
					<div class="col-md-12 col-sm-12 col-xs-12">
						@Html.TextAreaFor(model => model.Description, new { @class = "form-control col-md-12 col-xs-12 required", @maxlength = 50, rows = 3 })
					</div>
				</div>
				@if (Model.ProductId != default)
				{
					<div class="col-md-6 col-sm-6 col-xs-12">
						@Html.LabelFor(model => model.IsEnabled, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
						<div class="col-md-12 col-sm-12 col-xs-12">
							@Html.CheckBoxFor(model => model.IsEnabled, new { @class = "form-check" })
						</div>
					</div>
				}

			</div>
		</div>

		<div class="form-group">
			<div class="d-none">
				<input type="submit" value="Guardar" class="btn btn-primary" id="btn-create-format" data-tippy-content="Pulse para Guardar." />
			</div>
		</div>
	</form>
</div>

<div class="modal-footer">
	<button type="button" class="btn btn-outline-dark" onclick="hideModalPartial();" data-tippy-content="Pulse para Cancelar.">Cancelar</button>
	<button type="button" class="btn btn-primary" onclick="Product.Save();" data-tippy-content="Pulse para Guardar.">Guardar</button>
</div>