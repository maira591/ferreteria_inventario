@model Core.Domain.ViewModel.Formulator.ValidationVM
@{
    ViewBag.Title = "Validaciones";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var urlSaveInfo = @Url.Action("SaveInfo");
}

<link href="~/css/core/Formulator/Index.css" rel="stylesheet" asp-append-version="true" />
<script type="text/javascript">
    showLoading();
</script>

<form id="frmValidations" class="" asp-action="CreateOrUpdate" data-ajax="true" data-ajax-method="POST">
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ModelFormula)
    @Html.HiddenFor(model => model.MessageId)
    <div class="col-md-12 col-xl-12 col-sm-12">
        <div class="card">
            <div class="card-header card-header-primary">
                <div class="row">
                    <div class="col-6">
                        <div class="form-inline">
                            <h4 class="card-title ">
                                @ViewBag.TitlePage
                            </h4>
                        </div>
                        <p class="card-category">

                        </p>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <div class="tab" role="tabpanel">
                        <div class="col-sm-12">
                            <div class="row">
                                <div class="col-sm-2">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-form-label" })
                                </div>
                                <div class="col-sm-9">
                                    @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control required", autocomplete = "off", @style = "width:100%;", rows = "3" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2">
                                    @Html.LabelFor(model => model.Error, htmlAttributes: new { @class = "col-form-label", @style = "margin-top:5%" })
                                </div>
                                <div class="col-sm-9">
                                    <div class="form-check">
                                        <label class="form-check-label" tabindex="-1">
                                            <input class="form-check-input" type="checkbox" value="" @Html.Raw(Model != null && Model.Error ? "checked" : "") name="Error" id="Error" tabindex="-1" />
                                            <span class="form-check-sign gel-tab-key" data-tippy-content="Pulse para Seleccionar.">
                                                <span class="check" tabindex="-1"></span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-1">
                                <div class="col-sm-2">
                                    @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "col-form-label" })
                                </div>
                                <div class="col-sm-3">
                                    <div class="input-group date">
                                        @{string fecha = (Model != null && Model.ExpirationDate != null ? ((DateTime)Model.ExpirationDate).ToString("dd/MM/yyyy") : ""); }
                                        <input type="hidden" id="hdf_ExpirationDate" value="@fecha" />
                                        @Html.TextBoxFor(model => model.ExpirationDate, new { @class = "form-control", @readonly = "readonly" })
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-1">
                                <div class="col-sm-2">
                                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "col-form-label" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.DropDownListFor(model => model.Type, (IEnumerable<SelectListItem>)ViewBag.ListTypes, htmlAttributes: new { @class = "form-control", onchange = "formula()", @style = "width:100%;" })
                                </div>
                            </div>

                            <div class="row mb-1">
                                <div class="col-sm-2">
                                    @Html.LabelFor(model => model.TypeFormats, htmlAttributes: new { @class = "col-form-label" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.DropDownListFor(model => model.TypeFormats, (IEnumerable<SelectListItem>)ViewBag.TypeFormats, htmlAttributes: new { @class = "form-control", onchange = "typeFormatSelect()", @style = "width:100%;" })
                                </div>
                            </div>

                            <div class="row mb-1">
                                <div class="col-sm-2">
                                    @Html.LabelFor(model => model.Format, htmlAttributes: new { @class = "col-form-label" })
                                </div>
                                <div class="col-sm-4">
                                    @Html.DropDownListFor(model => model.Format, (IEnumerable<SelectListItem>)ViewBag.ListFormats, htmlAttributes: new { @class = "form-control", onchange = "formula()", @style = "width:100%;" })
                                </div>
                            </div>
                            <div class="row mb-1">
                                <div class="col-sm-2">
                                    @Html.LabelFor(model => model.IsOnlySQL, htmlAttributes: new { @class = "col-form-label", @style = "margin-top:5%" })
                                </div>
                                <div class="col-sm-9">
                                    <div class="form-check">
                                        <label class="form-check-label" tabindex="-1">
                                            <input class="form-check-input" type="checkbox" value="" @Html.Raw(Model != null && Model.IsOnlySQL ? "checked" : "") name="IsOnlySQL" id="IsOnlySQL" tabindex="-1" />
                                            <span class="form-check-sign gel-tab-key" data-tippy-content="Pulse para Seleccionar.">
                                                <span class="check" tabindex="-1"></span>
                                            </span>
                                        </label>
                                    </div>
                                </div>
                            </div>
                            <div class="m5"><br />
                            </div>
                            
                        </div>
                        <ul class="nav nav-tabs" id="myTab" role="tablist">
                            <li class="nav-item" role="presentation" data-istab="true">
                                <a id="formulator-tab" data-toggle="tab" class="nav-link active" href="#formulator" role="tab" aria-controls="uploadFormats">Formulador</a>
                            </li>
                            <li class="nav-item" role="presentation" data-istab="true">
                                <a id="sql-tab" class="nav-link" data-toggle="tab" href="#queryWritter" role="tab" aria-controls="formatErrors">Editor de Texto </a>
                            </li>
                        </ul>
                        <div class="tab-content tab">
                            <div role="tabpanel" class="tab-pane active" id="formulator">
                                <div class="cuerpo-formulador">
                                    <br />
                                    <div id="FormulaCont"></div>
                                    <br />
                                </div>
                            </div>

                            <div role="tabpanel" class="tab-pane fade" id="queryWritter">
                                <br />
                                @Html.TextAreaFor(model => model.Formula, htmlAttributes: new { @class = "form-control", rows = "10" })
                                <br />
                            </div>

                            <input type="button" onclick="SaveInformation('@Html.Raw(urlSaveInfo)');" class="btn btn-success" value="Guardar" data-tippy-content="Pulse para Guardar." />
                            @Html.ActionLink("Regresar", "Index", "Validation", null, new { @class = "btn btn-secondary", data_tippy_content = "Pulse para Regresar." })

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts{
    <script src="~/js/core/Formulator/Index.js" asp-append-version="true"></script>
    <script src="~/js/core/Formulator/ace.js" asp-append-version="true"></script>
    <script src="~/js/core/Formulator/theme-sqlserver.js" asp-append-version="true"></script>
    <script src="~/js/core/Formulator/mode-sqlserver.js" asp-append-version="true"></script>
    <script src="~/js/core/Formulator/jquery-ace.js" asp-append-version="true"></script>

    <script>
        $(function () {
            $('#nav-parametrization').click();
            $('#nav-validation').parent().addClass('active');
            $('#Formula').ace({ theme: 'sqlserver', lang: 'sqlserver' }, function () { alert(1); });
            $('.ace_editor').css('width', '100%').css('height', '250px');
            $('.date input').datepicker({ language: 'esp', clearBtn: true, format: "dd/mm/yyyy" });

            $('#parametrizacionNav').addClass('active');
            $('#parametrizacion').addClass('show');
            $('#nav-validation').addClass('active');

            $('#formulator-tab').click(function () {
                if (document.getElementById("ModelFormula").value === '' && $('#IsOnlySQL').is(":checked")) {
                    showAlert('No se puede cargar la formula porque la validación se generó a partir de una sentencia SQL', 'danger');
                }
            });

            //Enter and Space key
            $('.gel-tab-key').keyup(function (e) {
                e.preventDefault();

                if (e.keyCode === 13 || e.keyCode === 32) {
                    $(this).click();
                }
            });
            setExpiracionDate();

            $('#Formula').data('ace').editor.ace.setReadOnly(!$('#IsOnlySQL').is(":checked"));             
        });
        function setExpiracionDate() {
            $("#ExpirationDate").val($("#hdf_ExpirationDate").val());
        }

        $("#IsOnlySQL").click(function () {
            $('#Formula').data('ace').editor.ace.setReadOnly(!$(this).is(":checked"));
        });

    </script>
}
