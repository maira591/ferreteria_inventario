@model Core.Application.Website.Models.PasswordChange
@inject Core.Domain.ValuesCatalogService.IValueCatalogService _valueCatalogService;
@{
    var applicationInfo = _valueCatalogService.GetApplicationInfo().Result;
    ViewData["Title"] = "Cambiar contraseña";
    Layout = null;
}
<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="~/img/favicon.png" />
    <title>@ViewData["Title"] - @applicationInfo.Name</title>
    <link href="~/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link rel="stylesheet" href="~/css/sb-admin-2.css" />
</head>
<body class="bg-white">
    <input type="hidden" id="baseUrl" value="@ViewBag.UrlBase" />
    <div class="">
        <main role="main" class="pb-3">
            <partial name="_ModalPartial" />
            <div class="container">
                <!-- Outer Row -->
                <div class="row justify-content-center">
                    <div class="col-xl-10 col-lg-12 col-md-9">
                        <div class="card o-hidden border-0 my-5 shadow-lg">
                            <div class="card-body p-0">
                                <!-- Nested Row within Card Body -->
                                <div class="row p-5">
                                    <div class="col-md-6">
                                        <form enctype="multipart/form-data"  asp-action="PasswordChange" asp-controller="Login" data-ajax="true" data-ajax-method="POST" id="formPasswordChange" class="user">
                                            <h1 class="h4 text-gray-900 mb-2 text-center">Ingrese la nueva contraseña</h1>
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                            @Html.HiddenFor(model => model.UserId)
                                            @Html.HiddenFor(model => model.UserName)
                                            <br />

                                            <div class="form-group">
                                                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control form-control-user", placeholder = "Nueva contraseña" } })
                                                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control form-control-user", placeholder = "Confirmación de contraseña"} })
                                                @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                <div class="text-center">
                                                    <input type="submit" value="Restablecer" class="btn btn-primary btn-user btn-block" data-tippy-content="Pulse para Restablecer la Contraseña." />
                                                </div>
                                            </div>
                                        </form>
                                    </div>

                                    <div class="col-md-6">
                                        @if (Model.PasswordPolicies != null)
                                        {
                                            <h5 class="h4 text-gray-900 mb-2 text-center">Políticas de cambio de Contraseña</h5>
                                            <ul>
                                                <li>@Html.DisplayNameFor(model => model.PasswordPolicies.PasswordRequireNonLetterOrDigit): <b>@Model.PasswordPolicies.PasswordRequireNonLetterOrDigit</b></li>
                                                <li>@Html.DisplayNameFor(model => model.PasswordPolicies.PasswordRequireUppercase): <b>@Model.PasswordPolicies.PasswordRequireUppercase</b></li>
                                                <li>@Html.DisplayNameFor(model => model.PasswordPolicies.PasswordRequireLowercase): <b>@Model.PasswordPolicies.PasswordRequireLowercase</b></li>
                                                <li>@Html.DisplayNameFor(model => model.PasswordPolicies.PasswordRequireDigit): <b>@Model.PasswordPolicies.PasswordRequireDigit</b></li>
                                                <li>@Html.DisplayNameFor(model => model.PasswordPolicies.PasswordExpiredDays): <b>@Model.PasswordPolicies.PasswordExpiredDays</b></li>
                                                <li>@Html.DisplayNameFor(model => model.PasswordPolicies.PasswordRequiredLength): <b>@Model.PasswordPolicies.PasswordRequiredLength</b></li>
                                            </ul>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>
    <script src="~/vendor/jquery/jquery.min.js"></script>
    <script src="~/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/vendor/bootstrap/js/bootstrap-notify.js"></script>
    <script src="~/js/popper.js"></script>
    <script src="~/js/tippy.js"></script>
    <script src="~/js/sb-admin-2.min.js" asp-append-version="true"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/core/Login/Login.js" asp-append-version="true"></script>
</body>
</html>