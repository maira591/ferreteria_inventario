@using Newtonsoft.Json;
@model Core.Application.Website.Models.GraphicModel
@{
    ViewBag.Title = "Gráfica";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/css/core/Formulator/Index.css" rel="stylesheet" asp-append-version="true" />
<style>
    .disabledTab {
        pointer-events: none;
    }
</style>
<script type="text/javascript">
    showLoading();
</script>

<form id="form-graphic-crud" asp-action="CreateOrUpdate" asp-controller="Graphic" data-ajax="true" data-ajax-method="POST">
    @Html.AntiForgeryToken()
    <input type="hidden" id="baseUrl" name="baseUrl" value="@ViewBag.UrlBase" />

    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.CreatedOn)
    @Html.HiddenFor(model => model.GraphicPermissions)
    <input type="hidden" id="hdfGraphicId" value="@Model.Id" />

    <div class="col-md-12 col-xl-12 col-sm-12">
        <div class="card">
            <div class="card-header card-header-primary">
                <div class="row">
                    <div class="col-6">
                        <div class="form-inline">
                            <h4 class="card-title ">
                                @ViewBag.TitlePage
                            </h4>
                        </div>
                        <p class="card-category">

                        </p>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="graphic-tab" data-toggle="tab" href="#tabgraphic" role="tab" aria-controls="tabgraphic" aria-selected="true">Gráficas</a>
                    </li>
                    <li class="nav-item" id="graphic-indicator-tab-father">
                        <a class="nav-link" id="graphic-indicator-tab" data-toggle="tab" href="#graphic-indicator" role="tab" aria-controls="graphic-indicator" aria-selected="false">Indicadores</a>
                    </li>
                </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="tabgraphic" role="tabpanel" aria-labelledby="graphic-tab">
                        <div class="tab" role="tabpanel">
                            <div class="col-sm-12">

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.GraphicGroupId, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(model => model.GraphicGroupId, (IEnumerable<SelectListItem>)ViewBag.ListGraphicGroup, "Seleccione", htmlAttributes: new { @class = "form-control select2 required", @style = "width:100%;" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.GraphicSubGroupId, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(model => model.GraphicSubGroupId, (IEnumerable<SelectListItem>)ViewBag.ListGraphicSubGroup, "Seleccione", htmlAttributes: new { @class = "form-control select2", @style = "width:100%;" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(model => model.Title, htmlAttributes: new { @class = "form-control required", autocomplete = "off", @maxlength = 250 })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.SubTitle, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(model => model.SubTitle, htmlAttributes: new { @class = "form-control", autocomplete = "off", @maxlength = 250 })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.AxisTitleY, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(model => model.AxisTitleY, htmlAttributes: new { @class = "form-control ", autocomplete = "off", @maxlength = 60 })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.AxisTitleY1, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(model => model.AxisTitleY1, htmlAttributes: new { @class = "form-control", autocomplete = "off", @maxlength = 60 })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.AxisTitleX, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.TextBoxFor(model => model.AxisTitleX, htmlAttributes: new { @class = "form-control", autocomplete = "off", @maxlength = 60 })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.TypeGraphic, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(model => model.TypeGraphic, (IEnumerable<SelectListItem>)ViewBag.ListTypeGraphic, "Seleccione", htmlAttributes: new { @class = "form-control select2 required", @style = "width:100%;" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-6">
                                        <div class="col-sm-2">
                                            @Html.LabelFor(model => model.GraphicPermissions, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(model => model.GraphicPermissionId, (IEnumerable<SelectListItem>)ViewBag.ListRolePermissions, htmlAttributes: new { @class = "form-control multiselect required", @style = "width:100%;", multiple = "multiple" })
                                        </div>
                                    </div>
                                    <div class="col-sm-6">
                                        <div class="col-sm-12">
                                            @Html.LabelFor(model => model.PositionLegends, htmlAttributes: new { @class = "col-form-label" })
                                        </div>
                                        <div class="col-sm-12">
                                            @Html.DropDownListFor(model => model.PositionLegends, (IEnumerable<SelectListItem>)ViewBag.ListPositionLegend, htmlAttributes: new { @class = "form-control select2 required", @style = "width:100%;"})
                                        </div>
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-2 col-sm-4 col-xs-12">
                                        @Html.LabelFor(model => model.Order, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
                                        <div class="col-md-12 col-sm-12 col-xs-12">
                                            @Html.TextBoxFor(model => model.Order, new { @class = "form-control col-md-12 col-xs-12 inputPositiveInput required", placeholder = "Digite el orden", @maxlength = 3 })
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-sm-4 col-xs-12">
                                        @Html.LabelFor(model => model.EntityTypeId, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12l" })
                                        <div class="col-md-12 col-sm-12 col-xs-12">
                                            @Html.DropDownListFor(model => model.EntityTypeId, (IEnumerable<SelectListItem>)ViewBag.ListCooperativeType, "Seleccione", htmlAttributes: new { @class = "form-control required", @style = "width:100%;" })
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-sm-4 col-xs-12">
                                        @Html.LabelFor(model => model.IsDownloadable, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
                                        <div class="col-md-12 col-sm-12 col-xs-12">
                                            @Html.CheckBoxFor(model => model.IsDownloadable, new { @class = "form-check" })
                                        </div>
                                    </div>
                                    <div class="col-md-3 col-sm-4 col-xs-12">
                                        @Html.LabelFor(model => model.ShowIndicator, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
                                        <div class="col-md-12 col-sm-12 col-xs-12">
                                            @Html.CheckBoxFor(model => model.ShowIndicator, new { @class = "form-check" })
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-sm-4 col-xs-12">
                                        @Html.LabelFor(model => model.UseAccount, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
                                        <div class="col-md-12 col-sm-12 col-xs-12">
                                            @Html.CheckBoxFor(model => model.UseAccount, new { @class = "form-check" })
                                        </div>
                                    </div>
                                    @if (Model.Id != Guid.Empty)
                                    {
                                        <div class="col-md-2 col-sm-4 col-xs-12">
                                            @Html.LabelFor(model => model.IsEnabled, htmlAttributes: new { @class = "col-form-label col-md-12 col-sm-12 col-xs-12" })
                                            <div class="col-md-12 col-sm-12 col-xs-12">
                                                @Html.CheckBoxFor(model => model.IsEnabled, new { @class = "form-check" })
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>

                            <div class="row" style="width:100%;">
                                <div class="col-md-12 col-sm-12 col-xs-12 mt-3" style=" width: 90%;">
                                    <ul class="nav nav-tabs" id="myTab" role="tab">
                                        <li class="nav-item" role="presentation" data-istab="true" id="tapParameters">
                                            <a id="formulator-tab" data-toggle="tab" class="nav-link active" href="#formulator" role="tab">Sentencia SQL Gráfica</a>
                                        </li>
                                        <li class="nav-item" role="presentation" data-istab="true">
                                            <a id="sql-tab" class="nav-link" data-toggle="tab" href="#queryWritter" role="tab">Sentencia SQL Complementaria</a>
                                        </li>
                                    </ul>
                                    <div class="tab-content tab">
                                        <div role="tabpanel" class="tab-pane active" id="formulator">
                                            <br />
                                            @Html.TextAreaFor(model => model.SQLSentence, htmlAttributes: new { @class = "form-control required", rows = "10", @maxlength = 4000 })
                                            <br />
                                        </div>
                                        <div role="tabpanel" class="tab-pane fade" id="queryWritter">
                                            <br />
                                            @Html.TextAreaFor(model => model.SQLSentenceSupplementary, htmlAttributes: new { @class = "form-control", rows = "10", @maxlength = 4000 })
                                            <br />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade" id="graphic-indicator" role="tabpanel" aria-labelledby="graphic-indicator-tab">
                        <br />
                        <h4>Parametrización de indicadores</h4>
                        <div class="modal-body" id="modal-user-create-body" style="overflow-y: auto;">
                            <form id="formformatline">

                                @Html.AntiForgeryToken()
                                <input type="hidden" id="hdfFormatId" value="@ViewBag.FormatId" />

                                <div class="form-horizontal">
                                    <div class="row">
                                        <table id="tbDetail" class="table table-striped table-bordered nowrap dataTable no-footer">
                                            <thead>
                                                <tr>
                                                    <th style="width: 70px; color: #0057b1;">Orden</th>
                                                    <th style="width: 150px; color: #0057b1;">Indicador</th>
                                                    <th style="width: 60px; color: #0057b1;">Eje</th>
                                                    <th style="width: 60px; color: #0057b1;">Tipo Campo</th>
                                                    <th style="width: 200px; color: #0057b1;">Leyenda</th>
                                                    <th style="width: 70px; color: #0057b1;">Color</th>
                                                    <th style="width: 100px; color: #0057b1;">Signo</th>
                                                    <th style="width: 200px; color: #0057b1;">Indicador Agregado</th>
                                                    <th style="width:20px;"></th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                            <tfoot>
                                                <tr>
                                                    <td colspan="7" class="text-left" style="font-size:24px;"><a href="javascript:void(0)" id="btnAddRecord" data-tippy-content="Agregar Indicador"><i class="fa fa-plus-circle"></i></a></td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="d-none">
                                        <input type="submit" value="Guardar" class="btn btn-primary" id="btn-create-formatline" data-tippy-content="Pulse para Guardar." />
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="row mt-4" style="margin-left: 37px; margin-bottom: 20px;">

                    <input type="button" value="Guardar" class="btn btn-primary mr-2" data-tippy-content="Pulse para Guardar." onclick="Graphic.Save('@Url.Action("Validations")', '@Url.Action("CreateOrUpdate")');" />
                    @Html.ActionLink("Regresar", "Index", "Graphic", null, new { @class = "btn btn-secondary", data_tippy_content = "Pulse para Regresar." })
                </div>

            </div>
        </div>
    </div>
</form>

<script src="~/js/core/Graphic/Graphic.js" asp-append-version="true"></script>
<script src="~/js/core/GraphicIndicator/GraphicIndicator.js" asp-append-version="true"></script>
<script src="~/js/core/Formulator/ace.js" asp-append-version="true"></script>
<script src="~/js/core/Formulator/theme-sqlserver.js" asp-append-version="true"></script>
<script src="~/js/core/Formulator/mode-sqlserver.js" asp-append-version="true"></script>
<script src="~/js/core/Formulator/jquery-ace.js" asp-append-version="true"></script>
<script src="~/js/core/Petitions/Petitions.js"></script>
<script src="~/js/jquery.unobtrusive-ajax.js"></script>

@section Scripts{
    <script>
        var indicatorsList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.IndicatorsList));
        var typeFieldList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TypeFieldList));
        var typeEjeList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.TypeEjeList));
        var indicatorAggregateList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.IndicatorAggregateList));
        var signIndicatorList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.SignIndicatorList));
        var graphicIndicatorList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ListGraphicIndicator, new JsonSerializerSettings{ ReferenceLoopHandling = ReferenceLoopHandling.Ignore}));


        $(function () {

            $('#parametrizacionSIGNav').addClass('active');
            $('#parametrizacionSIG').addClass('show');
            $('#nav-graphic').addClass('active');

            $('#SQLSentence').ace({ theme: 'sqlserver', lang: 'sqlserver' }, function () { alert(1); });
            $('#SQLSentenceSupplementary').ace({ theme: 'sqlserver', lang: 'sqlserver' }, function () { alert(1); });
            $('.ace_editor').css('width', '100%').css('height', '200px');
            $('#GraphicGroupId').select2();
            $('#GraphicSubGroupId').select2();
            $('#PositionLegends').select2();
            $('#TypeGraphic').select2();
            CreateAllTooltips();
            addKeyboardEvents();
            hideLoading();
        });

        $(document).ready(function () {
            $('#GraphicPermissionId').multiselect({
                includeSelectAllOption: false,
                enableCaseInsensitiveFiltering: true,
                filterPlaceholder: 'Buscar ...',
                maxHeight: 150,
                onChange: function (option, checked) {
                    Graphic.GetSelectedGraphicPermission();
                },
                buttonTextAlignment: 'left',
                buttonWidth: '100%'
            });

            $('#UseAccount').on('click', function () {
                if ($(this).is(':checked')) {
                    $('#graphic-indicator-tab').addClass('disabled');
                    $('#graphic-indicator-tab').attr('aria-disabled', 'true');
                    $('#graphic-indicator-tab').removeAttr('data-toggle');
                    $('#graphic-indicator').removeClass('show active');
                } else {
                    $('#graphic-indicator-tab').removeClass('disabled');
                    $('#graphic-indicator-tab').attr('aria-disabled', 'false');
                    $('#graphic-indicator-tab').attr('data-toggle', 'tab');
                }
            });

            Graphic.InitControls();
            GraphicIndicator.InitForm(graphicIndicatorList, indicatorsList, typeFieldList, typeEjeList, indicatorAggregateList, signIndicatorList);
            if ($("#GraphicPermissions").val() != "") {
                Graphic.SetGraphicPermissionSelection();
            }

        });
    </script>
}
