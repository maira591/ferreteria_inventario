@model IEnumerable<Core.Application.Website.Models.GraphicModel>
@using NonFactors.Mvc.Grid

@{
    var urlEdit = @Url.Action("Edit", "Graphic");
    var urlDelete = @Url.Action("Delete", "Graphic");
    var urlDetails= @Url.Action("GraphicDetails", "Graphic");
}

@(Html.Grid(Model).Build(columns =>
{
    columns.Add(c => c.EntityTypeName).Titled("Tipo Cooperativa").UsingDefaultFilterMethod("contains");
    columns.Add(c => c.GraphicGroup.Name).Titled("Grupo").UsingDefaultFilterMethod("contains");
    columns.Add(c => c.GraphicSubGroup != null ? c.GraphicSubGroup.Name : "").Titled("Sub Grupo").UsingDefaultFilterMethod("contains");
    columns.Add(c => c.Title).Titled("Nombre").UsingDefaultFilterMethod("contains");
    columns.Add(c => c.TypeGraphic).Titled("Tipo Gráfica").UsingDefaultFilterMethod("contains");
    columns.Add(c => c.RoleNames).Titled("Roles").UsingDefaultFilterMethod("contains");
    columns.Add(c => c.Order).Titled("Orden").UsingDefaultFilterMethod("contains");
    columns.Add(c => c.IsEnabled).Titled("Activo").RenderedAs(x => x.IsEnabled ? "SI" : "NO");
    columns.Add(c => c.IsDownloadable).Titled("Descargar Información").RenderedAs(x => x.IsDownloadable ? "SI" : "NO");
    columns.Add().Titled("Acciones").RenderedAs(s => $"<div class='d-flex'>" +
$"<i class='fa fa-edit btn-lg text-primary-icon gel-tab-key' tabindex='0' data-tippy-content='Editar' onclick=\"Graphic.OpenEdit('{urlEdit}','{s.Id}');\"></i> <i class='fa fa-eye btn-lg text-secondary-icon gel-tab-key' style=\"cursor: pointer;\" tabindex='0' data-tippy-content='Ver detalles de la gráfica' onclick=\"Graphic.OpenGraphicDetails('{urlDetails}?id={s.Id}');\"></i>" +  (s.IsEnabled ? $"<i class='fa fa-times btn-lg text-danger-icon gel-tab-key' tabindex='0' data-tippy-content='Inactivar' style='margin-left:8px' onclick=\"Graphic.Delete('{urlDelete}?id={s.Id}')\"></i>" : "") 
+" </div>").Encoded(false);
}).Empty("No se encontraron datos").Filterable().Sortable().Id("my-ajax-grid")
                                        .Pageable(pager =>
                                        {
                                            pager.PageSizes = new Dictionary<Int32, String> { { 0, "Todos" }, { 5, "5" }, { 10, "10" }, { 50, "50" }, { 100, "100" } };
                                            pager.ShowPageSizes = true;
                                            pager.RowsPerPage = 5;
                                        }).Css("table table-bordered table-hover")

)