@model IEnumerable<Core.Domain.ViewModel.MessageVM>
@using NonFactors.Mvc.Grid
@{
    var urlEdit = @Url.Action("Edit");
}

@(Html.Grid("MvcGrid/_Grid", Model).Build(columns =>
{
    columns.Add(c => c.Code).Titled("Código").UsingDefaultFilterMethod("contains");
    columns.Add(c => c.Name).Titled("Nombre").UsingDefaultFilterMethod("contains").Filterable(GridFilterCase.Original);
    columns.Add(c => c.Description).Titled("Mensaje").UsingDefaultFilterMethod("contains").Filterable(GridFilterCase.Original);
    columns.Add(c => c.PossibleSolution).Titled("Posible solución").UsingDefaultFilterMethod("contains").Filterable(GridFilterCase.Original);
    columns.Add(c => c.Exception).Titled("Error no controlado").RenderedAs(s => s.Exception ? "Si" : "No").UsingDefaultFilterMethod("contains").Sortable(false);    
    columns.Add(c => c.Bus).Titled("Error del bus").RenderedAs(s => s.Bus ? "Si" : "No").UsingDefaultFilterMethod("contains").Sortable(false);    
    columns.Add().Titled("Acciones").RenderedAs(s => $"<i class='fa fa-edit btn-lg text-primary-icon gel-tab-key' data-tippy-content=\"Editar\" onclick=\"MessageError.OpenEdit('{urlEdit}?id={s.Id}');\"></i></div>").Encoded(false);
}).Empty("No se encontraron datos").Filterable().Sortable().Id("my-ajax-grid")
                                                .Pageable(pager =>
                                                {
                                                    pager.PageSizes = new Dictionary<Int32, String> { { 0, "Todos" }, { 5, "5" }, { 10, "10" }, { 50, "50" }, { 100, "100" } };
                                                    pager.ShowPageSizes = true;
                                                    pager.RowsPerPage = 5;
                                                }).Css("table table-bordered table-hover tablelayout")

)
